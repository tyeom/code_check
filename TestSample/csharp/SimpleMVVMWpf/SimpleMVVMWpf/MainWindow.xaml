<Window x:Class="SimpleMVVMWpf.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SimpleMVVMWpf"
        xmlns:ct="clr-namespace:SimpleMVVMWpf.Common.Controls"
        DataContext="{Binding MainViewModel, Source={StaticResource ViewModelLocator}}"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <Window.Resources>
        <DataTemplate x:Key="dDefaultDataListBox" DataType="{x:Type ListBoxItem}">
            <Grid TextBlock.FontSize="15">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <TextBlock Grid.Row="0"
                           Text="{Binding Name}" />
                <TextBlock Grid.Row="1"
                           Text="{Binding Age}" />
                <StackPanel Grid.Row="2"
                            Orientation="Horizontal">
                    <Button Content="수정"
                            Command="{Binding DataContext.EditCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"
                            CommandParameter="{Binding .}"/>
                </StackPanel>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="dStackDataListBox" DataType="{x:Type ListBoxItem}">
            <StackPanel Orientation="Vertical"
                        TextBlock.FontSize="15">
                <TextBlock Grid.Row="0"
                           Text="{Binding Name}" />
                <TextBlock Grid.Row="1"
                           Text="{Binding Age}" />
                <Button Content="확인" />
                <Button Content="수정" />
            </StackPanel>
        </DataTemplate>

        <local:ListTemplateSelector x:Key="ListTemplateSelector"
                                    NomalTemplate="{StaticResource dDefaultDataListBox}"
                                    StackTemplate="{StaticResource dStackDataListBox}" />

        <Style x:Key="sDataListBoxItem" TargetType="{x:Type ListBoxItem}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Grid Width="300"
                              Background="LightPink"
                              Margin="10">
                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                              Content="{TemplateBinding Content}"
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                              HorizontalAlignment="Stretch"
                                              VerticalAlignment="Stretch" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <local:ListStyleSelector x:Key="ListStyleSelector"
                                 NomalStyle="{StaticResource sDataListBoxItem}" />
    </Window.Resources>

    <Grid x:Name="xMainGrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="0"
                    Orientation="Horizontal"
                    TextBlock.FontSize="20"
                    TextBlock.FontWeight="Bold"
                    Margin="10">
            <Button Margin="0, 0, 10, 0"
                    Command="{Binding StyleChangeCommand}">템플릿 변경</Button>
            <Button Margin="0, 0, 10, 0"
                    Command="{Binding APageCommand}">A화면</Button>
            <Button Margin="0, 0, 10, 0"
                    Command="{Binding BPageCommand}">B화면</Button>
            <Button Margin="0, 0, 10, 0"
                    Command="{Binding CPageCommand}">C화면</Button>
            <Button Margin="0, 0, 10, 0"
                    Command="{Binding DPageCommand}">D화면</Button>
            <Button Margin="0, 0, 10, 0"
                    Command="{Binding ShowMsgCommand}">메세지 팝업 띄우기</Button>
        </StackPanel>

        <ListBox x:Name="xDataList"
                 Grid.Row="1"
                 ItemsSource="{Binding DataList, IsAsync=True, FallbackValue=Loading...}"
                 ItemTemplateSelector="{StaticResource ListTemplateSelector}"
                 ItemContainerStyleSelector="{StaticResource ListStyleSelector}"
                 HorizontalAlignment="Stretch"
                 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                 ScrollViewer.VerticalScrollBarVisibility="Auto"
                 HorizontalContentAlignment="Stretch">
            <ListBox.Style>
                <Style TargetType="ListBox">
                    <Setter Property="ItemsPanel">
                        <Setter.Value>
                            <ItemsPanelTemplate>
                                <WrapPanel IsItemsHost="True"
                                           VerticalAlignment="Top"
                                           HorizontalAlignment="Stretch" />
                            </ItemsPanelTemplate>
                        </Setter.Value>
                    </Setter>
                    <!--상황에 따라 ItemsPanel 템플릿 스타일 변경-->
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsDefaultStyle}" Value="False">
                            <Setter Property="ItemsPanel">
                                <Setter.Value>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Vertical"
                                                    IsItemsHost="True"
                                                    HorizontalAlignment="Stretch"/>
                                    </ItemsPanelTemplate>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>

            </ListBox.Style>
        </ListBox>

        <!--Popup시 백그라운드 처리-->
        <Border Grid.Row="0"
                Grid.RowSpan="2"
                Background="Black"
                Opacity="0.2">
            <Border.Style>
                <Style TargetType="Border">
                    <Setter Property="Visibility" Value="Collapsed" />

                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsMainPopUpOpen}" Value="True">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <Border.InputBindings>
                <MouseBinding MouseAction="LeftClick" Command="{Binding PopUpCloseCommand}"/>
            </Border.InputBindings>
        </Border>
        <!--Popup시 백그라운드 처리 END-->

        <Popup x:Name="xMainPopUp"
               IsOpen="{Binding IsMainPopUpOpen, UpdateSourceTrigger=PropertyChanged}"
               PlacementTarget="{Binding ElementName=xMainGrid}"
               Placement="Center">
            <Frame x:Name="xPopupFrame"
                   Source="{Binding PopupPage, Converter={StaticResource PopupEnumToPageConverter}}"
                   NavigationUIVisibility="Hidden"/>
        </Popup>

        <!--메세지 팝업창-->
        <!--확인 메세지-->
        <ct:MessagePopUpBox x:Name="xMsgBox_OK"
                            Grid.Row="0"
                            Grid.RowSpan="2"
                            IsOpen="{Binding IsMsgPopup, Mode=TwoWay}"
                            HAlignment="Stretch"
                            VAlignment="Center"
                            IsBackgroundDisable="True"
                            MessagePopUpBoxType="OK">
            <TextBlock x:Name="xTxtMsgBox"
                       FontSize="25"
                       Text="안녕하세요!!&#10;이 프로젝트는 아주 간단한 wpf MVVM 샘플 입니다."
                       FontWeight="ExtraBold"
                       Margin="20, 0, 20, 0"/>
        </ct:MessagePopUpBox>
        <!--확인 메세지 END-->
        <!--메세지 팝업창 END-->
    </Grid>
</Window>
